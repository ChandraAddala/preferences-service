buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/groups/public' }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.1.1'
        classpath 'com.github.townsfolk:gradle-release:1.2'
    }
}

apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'release'

defaultTasks  'clean', 'build'

sourceCompatibility = '1.7'
group = 'com.rackspace.prefs'
version = '1.0.0-SNAPSHOT'
mainClassName = "com.rackspace.prefs.WebApp"

repositories {
    mavenCentral()
}

ext.scala_version = '2.10.4'
ext.scalatra_version = '2.3.0'
ext.jetty_version = '9.2.3.v20140905'

dependencies {
    compile 'org.scala-lang:scala-compiler:' + scala_version
    compile 'org.scala-lang:scala-library:' + scala_version
    compile 'org.scalatra:scalatra_2.10:' + scalatra_version
    compile 'org.scalatra:scalatra-scalate_2.10:' + scalatra_version
    compile 'org.scalatra:scalatra-json_2.10:2.3.0'
    compile 'org.json4s:json4s-jackson_2.10:3.2.11'
    compile 'com.typesafe.slick:slick_2.10:2.1.0'
    compile 'com.h2database:h2:1.4.182'
    compile 'c3p0:c3p0:0.9.1.2'
    compile 'org.eclipse.jetty:jetty-webapp:' + jetty_version
    compile 'org.eclipse.jetty:jetty-servlet:' + jetty_version
    compile 'org.slf4j:slf4j-simple:1.6.1'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'javax.servlet:javax.servlet-api:3.0.1'
    testCompile 'org.scalatest:scalatest_2.10:2.1.7'
}

// task to create one uber executable jar
task uberjar(type: Jar) {
    from sourceSets.main.output
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    manifest {
        attributes 'Main-Class': 'com.rackspace.prefs.WebApp'
    }
}

release {
    failOnPublishNeeded = false
    failOnCommitNeeded = false
    failOnUnversionedFiles = false
    tagPrefix = 'preferences-service'
}

// 'gradle release' will also upload release to Nexus
createReleaseTag.dependsOn uploadArchives

modifyPom {
    project {
        name          'Preferences Service'
        description   'A service that provides REST API access to set (and validate) / get a group of key/value property'
        url           'http://github.com/rackerlabs/preferences-service'
        packaging     'jar'
        inceptionYear '2014'

        scm {
            url        'https://github.com/rackerlabs/preferences-service'
            connection 'scm:git:ssh://git@github.com/rackerlabs/preferences-service.git'
        }
    }
}

extraArchive {
    sources = true
    tests = true
    javadoc = false
}

nexus {
    sign = false
    repositoryUrl = 'http://maven.research.rackspacecloud.com/content/repositories/releases/'
    snapshotRepositoryUrl = 'http://maven.research.rackspacecloud.com/content/repositories/snapshots/'
}
